<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>OJ小技巧</title>
      <link href="posts/a031e9bb.html"/>
      <url>posts/a031e9bb.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文介绍了一些在刷题时比较有用的小技巧, 会持续更新, 建议你添加到收藏夹.</p></blockquote><hr><h1 id="万能头文件"><a href="#万能头文件" class="headerlink" title="万能头文件"></a>万能头文件</h1><p>我们在用<code>C++</code>刷<strong>OJ</strong>时, 会<code>#include</code>很多头文件, 有时候可能会忘记某个函数所属的头文件, 很搞心态.</p><p><code>C++</code>的头文件<code>bits/stdc++.h</code>，几乎包含了所有<code>C++</code>库函数.</p><p>通过<code>#include &lt;bits/stdc++.h&gt;</code>这一行代码即可省略添加头文件的烦人工作.</p><p>优缺点如下:</p><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li><p>在竞赛中节约时间</p></li><li><p>减少了编写所有必要头文件的工作量</p></li><li><p>对于使用的每个函数，不用记住GNU C++的所有STL</p></li></ul><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><ul><li><p>不是所有OJ平台都支持这个头文件(兼容性)</p></li><li><p>不属于GNU C++库的标准头文件，在部分情况下可能会失败</p></li><li><p>VS Code 和 DevCpp 不原生包含该头文件, 需要自己简单配置</p></li><li><p>使用它将包含许多不必要的东西，并增加编译时间</p></li><li><p>这个头文件不是C++标准的一部分，因此是不可移植的，应该避免</p></li><li><p>编译器每次编译翻译单元时都必须实际读取和分析每个包含的头文件，应该减少这类头文件的使用</p></li><li><p>万能头文件要占一部分空间，对于一些卡空间的题目不友好</p></li><li><p>万能头文件<code>include</code>了很多玄学的东西，可能导致你变量定义重复导致诡异的CE</p></li></ul><h2 id="部分平台兼容性"><a href="#部分平台兼容性" class="headerlink" title="部分平台兼容性"></a>部分平台兼容性</h2><ul><li><p>PTA<strong>支持</strong></p></li><li><p>DOTCPP<strong>支持</strong></p></li><li><p>洛谷<strong>支持</strong></p></li><li><p>POJ<strong>不支持</strong></p></li><li><p>HDU<strong>部分支持</strong>（G++支持，C++不支持）</p></li><li><p>Codeforces<strong>支持</strong></p></li><li><p>Topcoder<strong>支持</strong></p></li><li><p>大部分主流OJ平台都支持</p></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>综上, 这个头文件更适合在<strong>OJ</strong>比赛中使用。在日常开发中，我们应该尽可能不使用它，以控制编译时间和代码大小.</p><hr><h1 id="freopen重定向"><a href="#freopen重定向" class="headerlink" title="freopen重定向"></a><code>freopen</code>重定向</h1><p>调试程序时, 每次都要手动去复制粘贴样例输入, 非常麻烦.</p><p>利用<code>C++</code>的**<code>freopen</code>**函数即可替我们省去<code>Ctrl+C</code>、<code>Ctrl+V</code>的繁琐操作.</p><p><strong><code>freopen(&quot;文件名&quot;,&quot;r&quot;,stdin);</code></strong></p><ul><li>第一个参数为存储输入数据的文件的路径</li><li>第二个参数<code>“r”</code>表示read, 即从该文件读入数据</li><li>第三个参数<code>stdin</code>表示标准输入流, 也就是将程序输入从标准输入流(键盘)改为第一个参数所指定的文件</li></ul><p>我们可以把这行代码写在<code>main</code>函数的第一行, 因为一般来说, 读入数据都在<code>main</code>函数的起始处.</p><p>以下为代码示例:</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//A+B Problem</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">&quot;duan.in&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>); <span class="comment">//此后所有输入都来自duan.in, 当然, 你也可以使用a.txt等等.</span></span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> c = a + b;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; c &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中, “duan.in”的文件内容为:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 2</span><br><span class="line">3 4</span><br><span class="line">5 6</span><br></pre></td></tr></table></figure><p>程序输出为</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">7</span><br><span class="line">11</span><br></pre></td></tr></table></figure><p>出于某些原因(输出数据太多, 难以显示完整等等), 我们希望<strong>程序的输出结果能够储存在某个文件中</strong>, 我们通常会对输出进行复制, 然后粘贴到文件中.</p><p><strong>现在, 大可不必.</strong></p><p>接下来为你介绍<code>freopen</code>函数的另一用法.</p><p><strong><code>freopen(&quot;文件名&quot;,&quot;w&quot;,stdout);</code></strong></p><ul><li>第一个参数为用于保存输出的文件的路径</li><li>第二个参数<code>“w”</code>表示write, 即向该文件写入数据</li><li>第三个参数<code>stdout</code>表示标准输出流, 也就是将程序的输出从标准输出流(控制台)改为第一个参数所指定的文件</li></ul><p>我们对上文中的代码进行修改:</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//A+B Problem</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    freopen(<span class="string">&quot;duan.in&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="built_in">stdin</span>); <span class="comment">//此后所有输入都来自duan.in, 当然, 你也可以使用a.txt等等.</span></span><br><span class="line">    freopen(<span class="string">&quot;duan.out&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="built_in">stdout</span>); <span class="comment">//此后所有输出都写入duan.out</span></span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> c = a + b;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; c &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行后, 控制台没有任何输出.</p><p>我们查看<code>duan.out</code>文件, 内容如下:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">7</span><br><span class="line">11</span><br></pre></td></tr></table></figure><p>内容符合预期.</p><hr><h1 id="无穷大常量的设定"><a href="#无穷大常量的设定" class="headerlink" title="无穷大常量的设定"></a>无穷大常量的设定</h1><blockquote><p>我们经常会定义一些无穷大常量, 比如用于图论中表示两点之间没有路径等等.</p><blockquote><p>下文中采用<code>INF</code>表示无穷大常量</p></blockquote></blockquote><h2 id="999999999"><a href="#999999999" class="headerlink" title="999999999"></a>999999999</h2><p>对于初学者而言, 经常会用类似<code>999999999</code>之类的数表示<code>INF</code>, 其实, 这并不好. 一方面, 一些变态题目中给的数据可能比这个还要大; 另一方面, 这样显得很不专业(这才是真正原因).</p><p>因此, 尽量减少使用<code>999999999</code>, 尽管这输入起来很快, 很爽.</p><h2 id="0x7fffffff"><a href="#0x7fffffff" class="headerlink" title="0x7fffffff"></a>0x7fffffff</h2><p>很多程序员都喜欢设<code>INF</code>为<code>0x7fffffff</code>，因为这是32-bit<code>int</code>的最大值。</p><p>如果这个无穷大只用于一般的比较（比如求最小值时min变量的初值），那么0x7fffffff确实是一个完美的选择，但是在更多的情况 下，0x7fffffff并不是一个好的选择。</p><ul><li>很多时候我们并不只是单纯拿无穷大来作比较，而是会运算后再做比较，例如在大部分最短路径算法中都会使用的松弛操作：<br><code>if (d[u]+w[u][v]&lt;d[v]) d[v]=d[u]+w[u][v];</code><br>我们知道如果<code>u</code>,<code>v</code>之间没有边，那么<code>w[u][v]=INF</code>，如果我们的<code>INF</code>取<code>0x7fffffff</code>，那么<code>d[u]+w[u][v]</code>会溢出而变成负数， 我们的松弛操作便出错了。更一般的说，<code>0x7fffffff</code>不能满足“无穷大加一个有穷的数依然是无穷大”，反而, 它变成了一个很小的负数。</li><li>除了要满足加上一个常数依然是无穷大之外，我们的常量还应该满足“无穷大加无穷大依然是无穷大”，至少两个无穷大相加不应该出现灾难性的错误，这一点上<code>0x7fffffff</code>依然不能满足我们。</li></ul><p>综上, <code>0x7fffffff</code>也不是一个很好的选择.</p><h2 id="0x3f3f3f3f"><a href="#0x3f3f3f3f" class="headerlink" title="0x3f3f3f3f"></a>0x3f3f3f3f</h2><p>我们需要一个更好的家伙来顶替<code>0x7fffffff</code>，最严谨的办法当然是对无穷大进行特别处理而不是找一个很大很大的常量来代替它（或者说模拟它），但是这样会让我们的编程过程变得很麻烦。</p><p>最精巧的无穷大常量取值是<code>0x3f3f3f3f</code>，以下我会对这个常量做更深入的分析，你一定会体会其精巧之处。</p><ul><li>一方面, <code>0x3f3f3f3f</code>的十进制是<code>1061109567</code>，也就是<code>10^9</code>级别（和<code>0x7fffffff</code>一个数量级），而一般场合下的数据都是小于<code>10^9</code> 的，所以它可以作为无穷大使用而不致出现数据大于无穷大的情形。</li><li>另一方面，由于一般的数据都不会大于<code>10^9</code>，所以当我们把无穷大加上一个数据时，它并不会溢出（这就满足了“无穷大加一个有穷的数依然是无穷大”），事实上<code>0x3f3f3f3f</code>+<code>0x3f3f3f3f</code>=<code>2122219134，这非常大但却没有超过32-bit </code>int<code>的表示范围，所以</code>0x3f3f3f3f`还满足了我们“无穷大加无穷大还是无穷大”的需求。</li><li>最后，<code>0x3f3f3f3f</code>还能给我们带来一个意想不到的额外好处：如果我们想要将某个数组清零，我们通常会使用 <code>memset(a,0,sizeof(a))</code>这样的代码来实现（方便而高效），但是当我们想将某个数组全部赋值为无穷大时（例如解决图论问题时邻接矩阵的 初始化），就不能使用<code>memset</code>函数而得自己写循环了（写这些不重要的代码真的很痛苦），我们知道这是因为<code>memset</code>是按字节操作的，它能够对数组清零是因为0的每个字节都是0，现在好了，如果我们将无穷大设为<code>0x3f3f3f3f</code>，那么奇迹就发生了，<code>0x3f3f3f3f</code>的每个字节都是<code>0x3f</code>！所 以要把一段内存全部置为无穷大，我们只需要<code>memset(a,0x3f,sizeof(a))</code>。</li></ul><p>所以, 在通常的场合下，<code>0x3f3f3f3f</code>真的是一个非常棒的选择。</p><p><strong>综合比较之下, <code>0x3f3f3f3f</code>完美胜出.</strong></p><hr><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1>]]></content>
      
      
      <categories>
          
          <category> OJ题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OJ </tag>
            
            <tag> 技巧 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cat</title>
      <link href="posts/9e5e43a8.html"/>
      <url>posts/9e5e43a8.html</url>
      
        <content type="html"><![CDATA[<h1 id="I-will-show-cat"><a href="#I-will-show-cat" class="headerlink" title="I will show cat"></a>I will show cat</h1><img src="/posts/9e5e43a8/cat.jpg" class="" title><h1 id="cover"><a href="#cover" class="headerlink" title="cover: "></a>cover: <img src="/posts/9e5e43a8/cat.jpg" class="" title></h1><p>#top_img: <img src="/posts/9e5e43a8/cat.jpg" class="" title></p><p>hello</p><img src="/posts/9e5e43a8/cat.jpg" class="" title><p><img src="https://wallroom.io/img/1920x1080/bg-8199743.jpg" alt="this is a exampl"></p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
            <tag> hello </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>showcat</title>
      <link href="posts/28de7afc.html"/>
      <url>posts/28de7afc.html</url>
      
        <content type="html"><![CDATA[<h1 id="I-will-show-cat"><a href="#I-will-show-cat" class="headerlink" title="I will show cat"></a>I will show cat</h1><p><img src="/cat/cat.jpg" alt="cat"></p><h1 id="cover"><a href="#cover" class="headerlink" title="cover: "></a>cover: <img src="/cat/cat.jpg" alt="cat"></h1><p>#top_img: <img src="/cat/cat.jpg" alt="cat"></p><p>hello</p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
            <tag> hello </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客指南</title>
      <link href="posts/4a17b156.html"/>
      <url>posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>欢迎来到我的博客, 接下来我将为你简要介绍.</p></blockquote><hr><h1 id="博客介绍"><a href="#博客介绍" class="headerlink" title="博客介绍"></a>博客介绍</h1><h2 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h2><p>本博客的内容主要包含:</p><ul><li>技术分享</li><li>O J 题解</li><li>课程笔记</li><li>日常分享</li><li>个人总结</li><li>学习体会</li></ul><hr><h2 id="域名由来"><a href="#域名由来" class="headerlink" title="域名由来"></a>域名由来</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">duan8.xyz</span><br></pre></td></tr></table></figure><p>这个域名简短, 易于记忆, 朗朗上口, 同时也有谐音”<strong>段吧</strong>“之意, 一方面作为我的个人博客, 另一方面希望大家能够在”<strong>段吧</strong>“进行各方面的交流, 像一个贴吧一样.<br>因为这个博客目前是挂载到<code>Github</code>上的, 所以国内部分地区访问该网站会比较慢, 可以通过访问博客的另一地址 <a href="vayneduan.gitee.io">vayneduan.gitee.io</a> 来获得更好的阅读体验, 建议两个地址都收藏.</p><hr><h2 id="功能模块"><a href="#功能模块" class="headerlink" title="功能模块"></a>功能模块</h2><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>你可以通过输入关键字来搜索文章内容, 获取相关文章</p><h3 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h3><p>你可以通过<strong>关于</strong>页面来了解我的个人信息, 并且获得我的联系方式</p><h3 id="时间轴"><a href="#时间轴" class="headerlink" title="时间轴"></a>时间轴</h3><p>查看按发表日期排序的所有文章</p><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><p>查看所有文章涉及到的标签, 由标签来获取相关文章<br>标签通常是文章的关键词, 比较离散.</p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>查看所有文章涉及到的分类, 由分类来获取相关文章<br>分类会涉及到二级分类, 相比标签来说, 更有层次性.</p><h3 id="清单"><a href="#清单" class="headerlink" title="清单"></a>清单</h3><h4 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h4><p>分享我喜欢的音乐</p><h4 id="电影"><a href="#电影" class="headerlink" title="电影"></a>电影</h4><p>分享我喜欢的电影、资源链接、我的影评</p><h3 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h3><p>你可以在留言板发表任何友好内容<br>包括但不限于:</p><ul><li>和博主扯淡</li><li>对博客的建议</li><li>你的疑问</li><li>想看的内容</li><li>指正错误之处</li></ul><h3 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h3><p>分享一些有意义的博客链接和网站</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客指南 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>你可能想知道的</title>
      <link href="about/index.html"/>
      <url>about/index.html</url>
      
        <content type="html"><![CDATA[<h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><ul><li>段贤维</li><li>四川广汉</li><li>重庆大学 - 大三</li><li>计算机科学与技术</li></ul><hr><h1 id="联系我"><a href="#联系我" class="headerlink" title="联系我"></a>联系我</h1><ul><li><strong>QQ</strong>: 308647801</li><li><strong>WeChat</strong>: dxw308647801</li><li><strong>Email</strong>: <a href="mailto:&#x76;&#97;&#x79;&#x6e;&#101;&#x64;&#x75;&#97;&#110;&#x40;&#102;&#x6f;&#x78;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;">&#x76;&#97;&#x79;&#x6e;&#101;&#x64;&#x75;&#97;&#110;&#x40;&#102;&#x6f;&#x78;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#111;&#x6d;</a></li></ul><hr><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>C++</li><li>Java</li><li>Python</li><li>以上都菜得离谱…</li><li>高中物理(√)</li></ul><hr><h1 id="博客简介"><a href="#博客简介" class="headerlink" title="博客简介"></a>博客简介</h1><ul><li>技术分享</li><li><strong>O J</strong> 题解</li><li>课程笔记</li><li>日常分享</li><li>个人总结</li><li>学习体会</li></ul><hr><h1 id="学习计划"><a href="#学习计划" class="headerlink" title="学习计划"></a>学习计划</h1><ul><li><input disabled="" type="checkbox"> Linux</li><li><input disabled="" type="checkbox"> Kaggle</li><li><input disabled="" type="checkbox"> Pytorch</li><li><input disabled="" type="checkbox"> C++实战</li></ul><head>    <script defer src="https://use.fontawesome.com/releases/v5.0.1/js/all.js"></script>    <script defer src="https://use.fontawesome.com/releases/v5.0.1/js/v4-shims.js"></script>    <i class="这一行写在正文里, 去掉我这一句中文. fa fa-weixin"></i></head><link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.1/css/all.css">]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>想看的, 都在这。</title>
      <link href="tags/index.html"/>
      <url>tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友情链接</title>
      <link href="link/index.html"/>
      <url>link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>文章分类</title>
      <link href="categories/index.html"/>
      <url>categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>留言板</title>
      <link href="messageBoard/index.html"/>
      <url>messageBoard/index.html</url>
      
        <content type="html"><![CDATA[<blockquote><h3 id="你可以在此发表任何友好内容"><a href="#你可以在此发表任何友好内容" class="headerlink" title="你可以在此发表任何友好内容"></a>你可以在此发表任何友好内容</h3><h4 id="包括但不限于"><a href="#包括但不限于" class="headerlink" title="包括但不限于:"></a>包括但不限于:</h4><ul><li>和博主扯淡</li><li>对博客的建议</li><li>你的疑问</li><li>想看的内容</li><li>指正错误之处</li></ul></blockquote>]]></content>
      
    </entry>
    
    
  
</search>
